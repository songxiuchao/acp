ext {
    scalaJvmVersion = "1.8"
    println("scala target jvm is ${scalaJvmVersion}")
    println("scala version is ${scalaVersion}")
}

buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$versions.spring_boot")
    }
}

apply plugin: 'scala'
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

sourceCompatibility = "${scalaJvmVersion}"
targetCompatibility = "${scalaJvmVersion}"

dependencies {
    compile project(":acp:acp-spring-boot-starter")

    compile "org.scala-lang:scala-library:${scalaVersion}"
    compile "org.scala-lang:scala-compiler:${scalaVersion}"
    compile "org.scala-lang:scala-reflect:${scalaVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-scala_2.12:$versions.jackson_databind"

    compile "org.springframework.boot:spring-boot-starter-data-jpa"

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit'
    }
}

task scaladocJar(type: Jar, dependsOn: scaladoc) {
    classifier = 'scaladoc'
    from scaladoc.destinationDir
}

compileScala {
    options.encoding = "${encoding}"
    options.fork = true
}

compileTestScala {
    options.encoding = "${encoding}"
    options.fork = true
}

artifacts {
    archives scaladocJar
}