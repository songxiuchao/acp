ext {
    kotlinJvmVersion = "1.8"
    println("kotlin target jvm is ${kotlinJvmVersion}")
    println("kotlin version is ${kotlinVersion}")
}

buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$versions.spring_boot")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

sourceCompatibility = "${kotlinJvmVersion}"
targetCompatibility = "${kotlinJvmVersion}"

compileKotlin {
    kotlinOptions.jvmTarget = "${kotlinJvmVersion}"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "${kotlinJvmVersion}"
}

dependencies {
    compile project(":acp:acp-spring-boot-starter")

    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$versions.jackson_databind"

    compile "org.springframework.boot:spring-boot-starter-data-jpa"

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit'
    }
}